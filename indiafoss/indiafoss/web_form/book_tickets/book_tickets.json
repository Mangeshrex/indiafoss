{
 "accept_payment": 1,
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "amount": 0.0,
 "amount_based_on_field": 1,
 "amount_field": "total_amount",
 "apply_document_permissions": 0,
 "button_label": "Buy",
 "client_script": "let totalAmount = 0;\nlet studentTikPrice = 0;\nlet generalTikPrice = 0;\n\nlet generalTicketCount = 0;\nlet studentTicketCount = 0;\n\nlet ticketsLeft = 0;\n\nlet totalSelectedTickets = 0;\n\nconst getTicketPrices = async () => {\n    return new Promise((resolve) => {\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                'doctype': 'Conference',\n                'filters': {'name': frappe.web_form.get_value(['conference'])},\n                'fieldname': [\n                    'student_ticket_price',\n                    'general_ticket_price',\n                    'max_tickets',\n                    'tickets_booked',\n                ]\n            },\n            callback: function(r) {\n                if (!r.exc) {\n                    resolve(r.message);\n                } else {\n                    frappe.throw(\"Some error occurred\")\n                }\n            }\n        });\n    });\n}\n\nconst checkIfConferenceExists = async () => {\n    return new Promise((resolve) => {\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                'doctype': 'Conference',\n                'filters': {'name': frappe.web_form.get_value(['conference'])},\n                'fieldname': [\n                    'name'\n                ]\n            },\n            callback: function(r) {\n                if (!r.exc) {\n                    resolve(r.message);\n                } else {\n                    frappe.throw(\"Some error occurred\")\n                }\n            }\n        });\n    });\n}\n\nconst setTicketPriceInForm = (ticketPrices) => {\n    if (!ticketPrices) {\n        frappe.msgprint(`Conference not found`);\n        return;\n    }\n        \n    ticketsLeft = ticketPrices.max_tickets - ticketPrices.tickets_booked;\n        \n    // if ticket price is not available for a field hide it.\n    if (ticketPrices.student_ticket_price === 0) {\n        $('#student_ticket_container').hide();\n        frappe.web_form.set_df_property('student_tickets', 'hidden', 1);\n        frappe.web_form.set_df_property('student_ticket_price', 'hidden', 1);\n    }\n        \n    if (ticketPrices.general_ticket_price === 0) {\n        $('#general_ticket_container').hide();\n        frappe.web_form.set_df_property('general_tickets', 'hidden', 1);\n        frappe.web_form.set_df_property('general_ticket_price', 'hidden', 1);\n    }\n\n    studentTikPrice = ticketPrices.student_ticket_price;\n    generalTikPrice = ticketPrices.general_ticket_price;\n    frappe.web_form.set_value(['student_ticket_price'], ticketPrices.student_ticket_price)\n    frappe.web_form.set_value(['general_ticket_price'], ticketPrices.general_ticket_price)\n}  \n\nconst updateTotalTicketCount = () => {\n    totalSelectedTickets = generalTicketCount + studentTicketCount;\n    if (totalSelectedTickets > ticketsLeft) {\n        frappe.msgprint(`There are only ${ticketsLeft} tickets left for the conference`, title='Error');\n        return false;\n    }\n    return true;\n}\n\nfrappe.web_form.after_load = () => {\n\n    frappe.web_form.set_df_property('general_tickets', 'hidden', 1);\n    frappe.web_form.set_df_property('student_tickets', 'hidden', 1);\n\n    $('#student_ticket_count').html(studentTicketCount);\n    // student tickets button event listeners\n    $(\"#reduce_student_ticket_count\").click(function(){\n        studentTicketCount -= 1;\n        if (studentTicketCount < 0){\n            studentTicketCount = 0;\n        }\n        updateTotalTicketCount()\n        frappe.web_form.set_value(['student_tickets'], studentTicketCount);\n        $('#student_ticket_count').html(studentTicketCount);\n    });\n    \n    $(\"#increase_student_ticket_count\").click(function(){\n        studentTicketCount += 1;\n        let validCount = updateTotalTicketCount();\n        \n        if (!validCount) {\n            studentTicketCount -= 1;\n            updateTotalTicketCount();\n        }\n        \n        frappe.web_form.set_value(['student_tickets'], studentTicketCount);\n        $('#student_ticket_count').html(studentTicketCount);\n    });\n\n    // general ticket button event listeners\n    $('#general_ticket_count').html(generalTicketCount);\n    $(\"#reduce_general_ticket_count\").click(function(){\n        generalTicketCount -= 1;\n        if (generalTicketCount < 0){\n            generalTicketCount = 0;\n        }\n        updateTotalTicketCount()\n        frappe.web_form.set_value(['general_tickets'], generalTicketCount);\n        $('#general_ticket_count').html(generalTicketCount);\n    });\n    \n    $(\"#increase_general_ticket_count\").click(function(){\n        generalTicketCount += 1;\n        let validCount = updateTotalTicketCount();\n        \n        if (!validCount) {\n            generalTicketCount -= 1;\n            updateTotalTicketCount();\n        }\n        frappe.web_form.set_value(['general_tickets'], generalTicketCount);\n        $('#general_ticket_count').html(generalTicketCount);\n    });\n    \n    frappe.web_form.set_df_property('conference', 'read_only', 1);\n\n\n    frappe.web_form.on('conference',  async (field, value) => {\n        if (value) {\n            ticketPrices = await getTicketPrices();\n            setTicketPriceInForm(ticketPrices);\n        }\n    });\n    frappe.web_form.set_df_property('conference', 'read_only', 1);\n    frappe.web_form.set_df_property('student_ticket_price', 'read_only', 1);\n    frappe.web_form.set_df_property('general_ticket_price', 'read_only', 1);\n    frappe.web_form.set_df_property('total_amount', 'read_only', 1);\n    \n    frappe.web_form.on('student_tickets',  async (field, value) => {\n        if (value >= 0) {\n            let general_ticket_count = frappe.web_form.get_value(['general_tickets']);\n            \n            totalAmount = (general_ticket_count * generalTikPrice) + value * studentTikPrice\n            frappe.web_form.set_value(['total_amount'], totalAmount)\n        }\n    });\n    \n    frappe.web_form.on('general_tickets',  async (field, value) => {\n        if (value >= 0) {\n            let student_ticket_count = frappe.web_form.get_value(['student_tickets']);\n            \n            totalAmount = (student_ticket_count * studentTikPrice) + value * generalTikPrice\n            frappe.web_form.set_value(['total_amount'], totalAmount)\n        }\n    });\n}\n\nfrappe.web_form.validate = () => {\n    if (totalSelectedTickets <= 0){ \n        return false;\n    }\n    return true;\n}",
 "creation": "2023-01-04 21:46:19.922608",
 "currency": "INR",
 "doc_type": "Conference Payment",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "introduction_text": "<div class=\"ql-editor read-mode\"><p>Free and Open Source Software conference by the FOSS community.</p><p><br></p><p>Website: <a href=\"https://indiafoss.net\" rel=\"noopener noreferrer\">https://indiafoss.net</a></p><p><br></p><p><br></p><p>About FOSS United</p><p>FOSS United is a non-profit foundation that aims at promoting and strengthening the Free and Open Source Software (FOSS) ecosystem in India.</p><p><br></p><p>Terms &amp; Conditions:</p><p>Once bought, no monetary refunds will be given. You can only transfer the ticket to another person. You must inform the recipient of details to the organizing team by writing an email to the organizing team.</p><p>&nbsp;&nbsp;&nbsp;</p><p>You agree to share the information entered on this page with FOSS United Foundation and Razorpay, adhering to applicable laws.</p></div>",
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2023-01-14 16:28:16.360888",
 "modified_by": "Administrator",
 "module": "Indiafoss",
 "name": "book_tickets",
 "owner": "Administrator",
 "payment_button_help": "",
 "payment_button_label": "Buy Now!",
 "payment_gateway": "Razorpay",
 "published": 1,
 "route": "book-tickets",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "Book tickets",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "organization",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Organization or College Name",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "conference",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Select Conference",
   "max_length": 0,
   "max_value": 0,
   "options": "Conference",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "uname",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Name",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "email",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Email",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "phone",
   "fieldtype": "Int",
   "hidden": 0,
   "label": "Phone",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldtype": "HTML",
   "hidden": 0,
   "label": "Student tickets",
   "max_length": 0,
   "max_value": 0,
   "options": "<div id=\"student_ticket_container\">\n<p style=\"margin: 0;\">Select student tickets (optional)</p>\n<button class=\"btn\" id=\"reduce_student_ticket_count\"> <b>-</b> </button>\n<button class=\"btn\" id=\"student_ticket_count\"> <b>0</b> </button>\n<button class=\"btn\" id=\"increase_student_ticket_count\"> <b>+</b> </button><br>\n<p class=\"text-muted\" style=\"margin-top: 10px;\">Carry our college ID</p>\n</div>",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldtype": "HTML",
   "hidden": 0,
   "label": "General tickets",
   "max_length": 0,
   "max_value": 0,
   "options": "<br>\n<div id=\"general_ticket_container\">\n<p style=\"margin: 0;\">General tickets (optional)</p>\n<button class=\"btn\" id=\"reduce_general_ticket_count\"> <b>-</b> </button>\n<button class=\"btn\" id=\"general_ticket_count\"> <b>0</b> </button>\n<button class=\"btn\" id=\"increase_general_ticket_count\"> <b>+</b> </button>\n</div>",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "default": "0",
   "description": "",
   "fieldname": "student_tickets",
   "fieldtype": "Int",
   "hidden": 0,
   "label": "Select student tickets",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "default": "0",
   "fieldname": "general_tickets",
   "fieldtype": "Int",
   "hidden": 0,
   "label": "Select general tickets",
   "max_length": 0,
   "max_value": 0,
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "",
   "fieldtype": "Section Break",
   "hidden": 0,
   "label": "Ticket prices",
   "max_length": 0,
   "max_value": 0,
   "options": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "general_ticket_price",
   "fieldtype": "Currency",
   "hidden": 0,
   "label": "General ticket price",
   "max_length": 0,
   "max_value": 0,
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "student_ticket_price",
   "fieldtype": "Currency",
   "hidden": 0,
   "label": "Student ticket price",
   "max_length": 0,
   "max_value": 0,
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "",
   "fieldtype": "Column Break",
   "hidden": 0,
   "label": "",
   "max_length": 0,
   "max_value": 0,
   "options": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "total_amount",
   "fieldtype": "Currency",
   "hidden": 0,
   "label": "Total amount to pay",
   "max_length": 0,
   "max_value": 0,
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  }
 ]
}